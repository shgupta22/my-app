{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","i","length","charAt","slice","join","document","getElementById","select","navigator","clipboard","writeText","defaultProps","aboutText","Alert","alert","role","word","lower","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ca343e13.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n        <div className=\"container-fluid\">\n            {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li className=\"nav-item\">\n                        {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                    </li>\n                    {/* <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                    </li> */}\n                </ul>   \n                {/* <form className=\"d-flex\" role=\"search\">\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                    <button className=\"btn btn-primary\" type=\"submit\">Search</button>\n                </form> */}\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n                </div>                                          \n            </div>\n        </div>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: \"About text here\"\n}","import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n  const handleUpClick = ()=> {\n    // console.log('upper case clicked' + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  }\n\n  const handleLcClick = ()=> { \n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n  }\n\n  const handleInverseClick = ()=> {\n    let newText = \"\";\n    for(var i = 0; i<text.length; i++){\n        if(text[i] === text[i].toLowerCase()){\n            newText += text[i].toUpperCase();\n        }else {\n            newText += text[i].toLowerCase();\n        }\n    }\n    setText(newText);\n    props.showAlert(\"Converted to inverse case!\", \"success\");\n  }\n\n  const handleAltClick = ()=> {\n    let newText = text.toLowerCase().split(\"\");\n    for (let i = 0; i < newText.length; i += 2) {\n      newText[i] = newText[i].toUpperCase();\n    }\n    setText(newText.join(\"\"));\n    props.showAlert(\"Converted to alternate case!\", \"success\");\n  }\n\n  const handleCapClick = ()=> {\n    let newText = text.split(\" \");\n    for (let i = 0; i < newText.length; i++) {\n      newText[i] = newText[i].charAt(0).toUpperCase() + newText[i].slice(1);\n    }\n    setText(newText.join(\" \"));\n    props.showAlert(\"Converted to capitalized case!\", \"success\");\n  }\n\n  const handleCopyClick = ()=> {\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Copied to clipboard!\", \"success\");\n  }\n\n  const handleExtraSpaceClick = ()=> {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Removed extra spaces!\", \"success\");\n  }\n\n  const handleClearClick = ()=> {\n    setText('');\n    props.showAlert(\"Text cleared!\", \"success\");\n  }\n\n  const handleOnChange = (event)=> {\n    setText(event.target.value);\n  }\n\n  const [text, setText] = useState('');\n\n  return (\n    <>\n      <div className='container' style={{color: props.mode==='light'?'#042743':'white'}}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'grey', color: props.mode==='light'?'#042743':'white'}} id=\"myBox\" rows=\"8\"></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Uppercase</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleLcClick}>Lowercase</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleCapClick}>Capitalized Case</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleInverseClick}>Inverse Case</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleAltClick}>aLtErNaTe Case</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaceClick}>Remove Extra Space</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopyClick}>Copy Text</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\n      </div>\n      <div className='container my-3' style={{color: props.mode==='light'?'#042743':'white'}}>\n        <h2>Your text summary</h2>\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\n        <h2>Preview</h2>\n        <p>{text.length > 0 ? text: \"Enter some text to preview\"}</p>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=> {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n  return (\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\n    </div>\n  )\n}\n\nexport default Alert","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=> {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=> {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n        {/* <Router> */}\n          <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n          {/* <Navbar/> */}\n          <Alert alert={alert}/>\n          <div className=\"container my-3\">\n            {/* <Routes>\n              <Route exact path=\"/about\" element={<About/>}>\n              </Route>\n              <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>}>\n              </Route>\n            </Routes> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          </div>\n        {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}